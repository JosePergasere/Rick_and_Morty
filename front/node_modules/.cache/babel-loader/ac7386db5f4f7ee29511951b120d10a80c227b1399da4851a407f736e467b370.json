{"ast":null,"code":"import axios from \"axios\";\nimport { FILTER, ORDER, GET_CHARACTER_DETAIL, CLEAN_DETAIL, GET_FAVORITES } from \"./action-types\";\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nexport const orderCards = id => {\n  return {\n    type: ORDER,\n    payload: id\n  };\n};\nexport const getCharacterDetail = id => {\n  return async function (dispatch) {\n    const URL_BASE = \"http://localhost:3001/rickandmorty\";\n    const response = await axios.get(`${URL_BASE}/detail/${id}`);\n    dispatch({\n      type: GET_CHARACTER_DETAIL,\n      payload: response.data\n    });\n  };\n};\nexport const getFavorites = () => {\n  return async function (dispatch) {\n    const URL_BASE = \"http://localhost:3001/rickandmorty\";\n    try {\n      const response = await axios.get(`${URL_BASE}/fav`);\n      dispatch({\n        type: GET_FAVORITES,\n        payload: response.data\n      });\n    } catch (error) {\n      // Si la solicitud falla con un error 400, es probable que la base de datos esté vacía\n      if (error.response && error.response.status === 400) ;\n      dispatch({\n        type: GET_FAVORITES,\n        payload: []\n      });\n    }\n  };\n};\nexport const cleanDetail = () => {\n  return {\n    type: CLEAN_DETAIL\n  };\n};","map":{"version":3,"names":["axios","FILTER","ORDER","GET_CHARACTER_DETAIL","CLEAN_DETAIL","GET_FAVORITES","filterCards","gender","type","payload","orderCards","id","getCharacterDetail","dispatch","URL_BASE","response","get","data","getFavorites","error","status","cleanDetail"],"sources":["C:/Users/Giuseppe/Desktop/PI2.0/Rick_and_morty/front/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  FILTER,\r\n  ORDER,\r\n  GET_CHARACTER_DETAIL,\r\n  CLEAN_DETAIL,\r\n  GET_FAVORITES,\r\n} from \"./action-types\";\r\n\r\nexport const filterCards = (gender) => {\r\n  return {\r\n    type: FILTER,\r\n    payload: gender,\r\n  };\r\n};\r\n\r\nexport const orderCards = (id) => {\r\n  return {\r\n    type: ORDER,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const getCharacterDetail = (id) => {\r\n  return async function (dispatch) {\r\n    const URL_BASE = \"http://localhost:3001/rickandmorty\";\r\n    const response = await axios.get(`${URL_BASE}/detail/${id}`);\r\n    dispatch({ type: GET_CHARACTER_DETAIL, payload: response.data });\r\n  };\r\n};\r\n\r\nexport const getFavorites = () => {\r\n  return async function (dispatch) {\r\n    const URL_BASE = \"http://localhost:3001/rickandmorty\";\r\n    try {\r\n      const response = await axios.get(`${URL_BASE}/fav`);\r\n      dispatch({ type: GET_FAVORITES, payload: response.data });\r\n    } catch (error) {\r\n      // Si la solicitud falla con un error 400, es probable que la base de datos esté vacía\r\n      if (error.response && error.response.status === 400);\r\n      dispatch({ type: GET_FAVORITES, payload: [] });\r\n    }\r\n  };\r\n};\r\nexport const cleanDetail = () => {\r\n  return { type: CLEAN_DETAIL };\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,MAAM,EACNC,KAAK,EACLC,oBAAoB,EACpBC,YAAY,EACZC,aAAa,QACR,gBAAgB;AAEvB,OAAO,MAAMC,WAAW,GAAIC,MAAM,IAAK;EACrC,OAAO;IACLC,IAAI,EAAEP,MAAM;IACZQ,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIC,EAAE,IAAK;EAChC,OAAO;IACLH,IAAI,EAAEN,KAAK;IACXO,OAAO,EAAEE;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAID,EAAE,IAAK;EACxC,OAAO,gBAAgBE,QAAQ,EAAE;IAC/B,MAAMC,QAAQ,GAAG,oCAAoC;IACrD,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,GAAEF,QAAS,WAAUH,EAAG,EAAC,CAAC;IAC5DE,QAAQ,CAAC;MAAEL,IAAI,EAAEL,oBAAoB;MAAEM,OAAO,EAAEM,QAAQ,CAACE;IAAK,CAAC,CAAC;EAClE,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAO,gBAAgBL,QAAQ,EAAE;IAC/B,MAAMC,QAAQ,GAAG,oCAAoC;IACrD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,GAAEF,QAAS,MAAK,CAAC;MACnDD,QAAQ,CAAC;QAAEL,IAAI,EAAEH,aAAa;QAAEI,OAAO,EAAEM,QAAQ,CAACE;MAAK,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd;MACA,IAAIA,KAAK,CAACJ,QAAQ,IAAII,KAAK,CAACJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAC;MACpDP,QAAQ,CAAC;QAAEL,IAAI,EAAEH,aAAa;QAAEI,OAAO,EAAE;MAAG,CAAC,CAAC;IAChD;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMY,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO;IAAEb,IAAI,EAAEJ;EAAa,CAAC;AAC/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}